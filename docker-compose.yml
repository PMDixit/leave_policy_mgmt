version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-leave_policy_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-leave_policy_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-me-in-production}
      - DEBUG=${DEBUG:-True}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-config.settings.development}
      - DB_NAME=${DB_NAME:-leave_policy_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_HOST=db
      - DB_PORT=5432
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-app,localhost,127.0.0.1}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      - TENANT_SERVICE_URL=${TENANT_SERVICE_URL:-https://tenants1.devapitenant.techforing.com}
    volumes:
      - staticfiles:/app/staticfiles
      - media:/app/media
      - logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        python manage.py migrate --settings=config.settings.development &&
        python manage.py collectstatic --noinput --clear &&
        gunicorn --bind 0.0.0.0:8000 --workers 4 --threads 4 --worker-class gthread --access-logfile - --error-logfile - config.wsgi:application
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - staticfiles:/app/staticfiles
      - media:/app/media
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  staticfiles:
  media:
  logs:
